class Node:
    """Class representing a single node in the linked list."""
    def __init__(self, data):
        self.data = data
        self.next = None


class LinkedList:
    """Class to manage the linked list."""
    def __init__(self):
        self.head = None

    def add_node(self, data):
        """Adds a node with the given data to the end of the list."""
        new_node = Node(data)
        if not self.head:
            self.head = new_node
            print(f"Added head: {data}")
        else:
            current = self.head
            while current.next:
                current = current.next
            current.next = new_node
            print(f"Added node: {data}")

    def print_list(self):
        """Prints the linked list."""
        if not self.head:
            print("List is empty.")
            return
        current = self.head
        print("Linked List:", end=" ")
        while current:
            print(current.data, end=" -> ")
            current = current.next
        print("None")

    def delete_nth_node(self, n):
        """Deletes the nth node (1-based index)."""
        try:
            if not self.head:
                raise Exception("Cannot delete from an empty list.")

            if n <= 0:
                raise Exception("Index must be a positive integer.")

            # Deleting head
            if n == 1:
                print(f"Deleting node at position 1 with value: {self.head.data}")
                self.head = self.head.next
                return

            current = self.head
            for i in range(n - 2):
                if current.next is None:
                    raise IndexError("Index out of range.")
                current = current.next

            if current.next is None:
                raise IndexError("Index out of range.")

            print(f"Deleting node at position {n} with value: {current.next.data}")
            current.next = current.next.next

        except Exception as e:
            print("Error:", e)

# Testing the linked list 
if __name__ == "__main__":
    ll = LinkedList()

    # Add nodes
    ll.add_node(5)
    ll.add_node(10)
    ll.add_node(15)
    ll.add_node(20)

    # Print list
    ll.print_list()

    # Delete 3rd node
    ll.delete_nth_node(3)
    ll.print_list()

    # Try deleting 10th node (out of range)
    ll.delete_nth_node(9)

    # Try deleting from empty list
    ll = LinkedList()
    ll.delete_nth_node(1)
